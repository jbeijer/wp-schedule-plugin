{
  "version": 3,
  "sources": ["../../sprintf-js/src/sprintf.js", "../../remove-accents/index.js", "../../memize/dist/index.js", "../../@wordpress/i18n/build-module/@wordpress/i18n/src/sprintf.js", "../../@tannin/postfix/index.js", "../../@tannin/evaluate/index.js", "../../@tannin/compile/index.js", "../../@tannin/plural-forms/index.js", "../../tannin/index.js", "../../@wordpress/i18n/build-module/@wordpress/i18n/src/create-i18n.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/validateNamespace.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/validateHookName.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createAddHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createRemoveHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createHasHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createRunHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createCurrentHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createDoingHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createDidHook.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/createHooks.js", "../../@wordpress/hooks/build-module/@wordpress/hooks/src/index.js", "../../@wordpress/i18n/build-module/@wordpress/i18n/src/default-i18n.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/nonce.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/namespace-endpoint.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/root-url.js", "../../@wordpress/url/build-module/@wordpress/url/src/get-query-string.js", "../../@wordpress/url/build-module/@wordpress/url/src/build-query-string.js", "../../@wordpress/url/build-module/@wordpress/url/src/safe-decode-uri-component.js", "../../@wordpress/url/build-module/@wordpress/url/src/get-query-args.js", "../../@wordpress/url/build-module/@wordpress/url/src/add-query-args.js", "../../@wordpress/url/build-module/@wordpress/url/src/get-query-arg.js", "../../@wordpress/url/build-module/@wordpress/url/src/has-query-arg.js", "../../@wordpress/url/build-module/@wordpress/url/src/remove-query-args.js", "../../@wordpress/url/build-module/@wordpress/url/src/clean-for-slug.js", "../../@wordpress/url/build-module/@wordpress/url/src/normalize-path.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/preloading.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/fetch-all-middleware.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/http-v1.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/user-locale.js", "../../@wordpress/api-fetch/build-module/utils/@wordpress/api-fetch/src/utils/response.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/media-upload.js", "../../@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/theme-preview.js", "../../@wordpress/api-fetch/build-module/@wordpress/api-fetch/src/index.js"],
  "sourcesContent": ["/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n", "var characterMap = {\n\t\"À\": \"A\",\n\t\"Á\": \"A\",\n\t\"Â\": \"A\",\n\t\"Ã\": \"A\",\n\t\"Ä\": \"A\",\n\t\"Å\": \"A\",\n\t\"Ấ\": \"A\",\n\t\"Ắ\": \"A\",\n\t\"Ẳ\": \"A\",\n\t\"Ẵ\": \"A\",\n\t\"Ặ\": \"A\",\n\t\"Æ\": \"AE\",\n\t\"Ầ\": \"A\",\n\t\"Ằ\": \"A\",\n\t\"Ȃ\": \"A\",\n\t\"Ả\": \"A\",\n\t\"Ạ\": \"A\",\n\t\"Ẩ\": \"A\",\n\t\"Ẫ\": \"A\",\n\t\"Ậ\": \"A\",\n\t\"Ç\": \"C\",\n\t\"Ḉ\": \"C\",\n\t\"È\": \"E\",\n\t\"É\": \"E\",\n\t\"Ê\": \"E\",\n\t\"Ë\": \"E\",\n\t\"Ế\": \"E\",\n\t\"Ḗ\": \"E\",\n\t\"Ề\": \"E\",\n\t\"Ḕ\": \"E\",\n\t\"Ḝ\": \"E\",\n\t\"Ȇ\": \"E\",\n\t\"Ẻ\": \"E\",\n\t\"Ẽ\": \"E\",\n\t\"Ẹ\": \"E\",\n\t\"Ể\": \"E\",\n\t\"Ễ\": \"E\",\n\t\"Ệ\": \"E\",\n\t\"Ì\": \"I\",\n\t\"Í\": \"I\",\n\t\"Î\": \"I\",\n\t\"Ï\": \"I\",\n\t\"Ḯ\": \"I\",\n\t\"Ȋ\": \"I\",\n\t\"Ỉ\": \"I\",\n\t\"Ị\": \"I\",\n\t\"Ð\": \"D\",\n\t\"Ñ\": \"N\",\n\t\"Ò\": \"O\",\n\t\"Ó\": \"O\",\n\t\"Ô\": \"O\",\n\t\"Õ\": \"O\",\n\t\"Ö\": \"O\",\n\t\"Ø\": \"O\",\n\t\"Ố\": \"O\",\n\t\"Ṍ\": \"O\",\n\t\"Ṓ\": \"O\",\n\t\"Ȏ\": \"O\",\n\t\"Ỏ\": \"O\",\n\t\"Ọ\": \"O\",\n\t\"Ổ\": \"O\",\n\t\"Ỗ\": \"O\",\n\t\"Ộ\": \"O\",\n\t\"Ờ\": \"O\",\n\t\"Ở\": \"O\",\n\t\"Ỡ\": \"O\",\n\t\"Ớ\": \"O\",\n\t\"Ợ\": \"O\",\n\t\"Ù\": \"U\",\n\t\"Ú\": \"U\",\n\t\"Û\": \"U\",\n\t\"Ü\": \"U\",\n\t\"Ủ\": \"U\",\n\t\"Ụ\": \"U\",\n\t\"Ử\": \"U\",\n\t\"Ữ\": \"U\",\n\t\"Ự\": \"U\",\n\t\"Ý\": \"Y\",\n\t\"à\": \"a\",\n\t\"á\": \"a\",\n\t\"â\": \"a\",\n\t\"ã\": \"a\",\n\t\"ä\": \"a\",\n\t\"å\": \"a\",\n\t\"ấ\": \"a\",\n\t\"ắ\": \"a\",\n\t\"ẳ\": \"a\",\n\t\"ẵ\": \"a\",\n\t\"ặ\": \"a\",\n\t\"æ\": \"ae\",\n\t\"ầ\": \"a\",\n\t\"ằ\": \"a\",\n\t\"ȃ\": \"a\",\n\t\"ả\": \"a\",\n\t\"ạ\": \"a\",\n\t\"ẩ\": \"a\",\n\t\"ẫ\": \"a\",\n\t\"ậ\": \"a\",\n\t\"ç\": \"c\",\n\t\"ḉ\": \"c\",\n\t\"è\": \"e\",\n\t\"é\": \"e\",\n\t\"ê\": \"e\",\n\t\"ë\": \"e\",\n\t\"ế\": \"e\",\n\t\"ḗ\": \"e\",\n\t\"ề\": \"e\",\n\t\"ḕ\": \"e\",\n\t\"ḝ\": \"e\",\n\t\"ȇ\": \"e\",\n\t\"ẻ\": \"e\",\n\t\"ẽ\": \"e\",\n\t\"ẹ\": \"e\",\n\t\"ể\": \"e\",\n\t\"ễ\": \"e\",\n\t\"ệ\": \"e\",\n\t\"ì\": \"i\",\n\t\"í\": \"i\",\n\t\"î\": \"i\",\n\t\"ï\": \"i\",\n\t\"ḯ\": \"i\",\n\t\"ȋ\": \"i\",\n\t\"ỉ\": \"i\",\n\t\"ị\": \"i\",\n\t\"ð\": \"d\",\n\t\"ñ\": \"n\",\n\t\"ò\": \"o\",\n\t\"ó\": \"o\",\n\t\"ô\": \"o\",\n\t\"õ\": \"o\",\n\t\"ö\": \"o\",\n\t\"ø\": \"o\",\n\t\"ố\": \"o\",\n\t\"ṍ\": \"o\",\n\t\"ṓ\": \"o\",\n\t\"ȏ\": \"o\",\n\t\"ỏ\": \"o\",\n\t\"ọ\": \"o\",\n\t\"ổ\": \"o\",\n\t\"ỗ\": \"o\",\n\t\"ộ\": \"o\",\n\t\"ờ\": \"o\",\n\t\"ở\": \"o\",\n\t\"ỡ\": \"o\",\n\t\"ớ\": \"o\",\n\t\"ợ\": \"o\",\n\t\"ù\": \"u\",\n\t\"ú\": \"u\",\n\t\"û\": \"u\",\n\t\"ü\": \"u\",\n\t\"ủ\": \"u\",\n\t\"ụ\": \"u\",\n\t\"ử\": \"u\",\n\t\"ữ\": \"u\",\n\t\"ự\": \"u\",\n\t\"ý\": \"y\",\n\t\"ÿ\": \"y\",\n\t\"Ā\": \"A\",\n\t\"ā\": \"a\",\n\t\"Ă\": \"A\",\n\t\"ă\": \"a\",\n\t\"Ą\": \"A\",\n\t\"ą\": \"a\",\n\t\"Ć\": \"C\",\n\t\"ć\": \"c\",\n\t\"Ĉ\": \"C\",\n\t\"ĉ\": \"c\",\n\t\"Ċ\": \"C\",\n\t\"ċ\": \"c\",\n\t\"Č\": \"C\",\n\t\"č\": \"c\",\n\t\"C̆\": \"C\",\n\t\"c̆\": \"c\",\n\t\"Ď\": \"D\",\n\t\"ď\": \"d\",\n\t\"Đ\": \"D\",\n\t\"đ\": \"d\",\n\t\"Ē\": \"E\",\n\t\"ē\": \"e\",\n\t\"Ĕ\": \"E\",\n\t\"ĕ\": \"e\",\n\t\"Ė\": \"E\",\n\t\"ė\": \"e\",\n\t\"Ę\": \"E\",\n\t\"ę\": \"e\",\n\t\"Ě\": \"E\",\n\t\"ě\": \"e\",\n\t\"Ĝ\": \"G\",\n\t\"Ǵ\": \"G\",\n\t\"ĝ\": \"g\",\n\t\"ǵ\": \"g\",\n\t\"Ğ\": \"G\",\n\t\"ğ\": \"g\",\n\t\"Ġ\": \"G\",\n\t\"ġ\": \"g\",\n\t\"Ģ\": \"G\",\n\t\"ģ\": \"g\",\n\t\"Ĥ\": \"H\",\n\t\"ĥ\": \"h\",\n\t\"Ħ\": \"H\",\n\t\"ħ\": \"h\",\n\t\"Ḫ\": \"H\",\n\t\"ḫ\": \"h\",\n\t\"Ĩ\": \"I\",\n\t\"ĩ\": \"i\",\n\t\"Ī\": \"I\",\n\t\"ī\": \"i\",\n\t\"Ĭ\": \"I\",\n\t\"ĭ\": \"i\",\n\t\"Į\": \"I\",\n\t\"į\": \"i\",\n\t\"İ\": \"I\",\n\t\"ı\": \"i\",\n\t\"Ĳ\": \"IJ\",\n\t\"ĳ\": \"ij\",\n\t\"Ĵ\": \"J\",\n\t\"ĵ\": \"j\",\n\t\"Ķ\": \"K\",\n\t\"ķ\": \"k\",\n\t\"Ḱ\": \"K\",\n\t\"ḱ\": \"k\",\n\t\"K̆\": \"K\",\n\t\"k̆\": \"k\",\n\t\"Ĺ\": \"L\",\n\t\"ĺ\": \"l\",\n\t\"Ļ\": \"L\",\n\t\"ļ\": \"l\",\n\t\"Ľ\": \"L\",\n\t\"ľ\": \"l\",\n\t\"Ŀ\": \"L\",\n\t\"ŀ\": \"l\",\n\t\"Ł\": \"l\",\n\t\"ł\": \"l\",\n\t\"Ḿ\": \"M\",\n\t\"ḿ\": \"m\",\n\t\"M̆\": \"M\",\n\t\"m̆\": \"m\",\n\t\"Ń\": \"N\",\n\t\"ń\": \"n\",\n\t\"Ņ\": \"N\",\n\t\"ņ\": \"n\",\n\t\"Ň\": \"N\",\n\t\"ň\": \"n\",\n\t\"ŉ\": \"n\",\n\t\"N̆\": \"N\",\n\t\"n̆\": \"n\",\n\t\"Ō\": \"O\",\n\t\"ō\": \"o\",\n\t\"Ŏ\": \"O\",\n\t\"ŏ\": \"o\",\n\t\"Ő\": \"O\",\n\t\"ő\": \"o\",\n\t\"Œ\": \"OE\",\n\t\"œ\": \"oe\",\n\t\"P̆\": \"P\",\n\t\"p̆\": \"p\",\n\t\"Ŕ\": \"R\",\n\t\"ŕ\": \"r\",\n\t\"Ŗ\": \"R\",\n\t\"ŗ\": \"r\",\n\t\"Ř\": \"R\",\n\t\"ř\": \"r\",\n\t\"R̆\": \"R\",\n\t\"r̆\": \"r\",\n\t\"Ȓ\": \"R\",\n\t\"ȓ\": \"r\",\n\t\"Ś\": \"S\",\n\t\"ś\": \"s\",\n\t\"Ŝ\": \"S\",\n\t\"ŝ\": \"s\",\n\t\"Ş\": \"S\",\n\t\"Ș\": \"S\",\n\t\"ș\": \"s\",\n\t\"ş\": \"s\",\n\t\"Š\": \"S\",\n\t\"š\": \"s\",\n\t\"Ţ\": \"T\",\n\t\"ţ\": \"t\",\n\t\"ț\": \"t\",\n\t\"Ț\": \"T\",\n\t\"Ť\": \"T\",\n\t\"ť\": \"t\",\n\t\"Ŧ\": \"T\",\n\t\"ŧ\": \"t\",\n\t\"T̆\": \"T\",\n\t\"t̆\": \"t\",\n\t\"Ũ\": \"U\",\n\t\"ũ\": \"u\",\n\t\"Ū\": \"U\",\n\t\"ū\": \"u\",\n\t\"Ŭ\": \"U\",\n\t\"ŭ\": \"u\",\n\t\"Ů\": \"U\",\n\t\"ů\": \"u\",\n\t\"Ű\": \"U\",\n\t\"ű\": \"u\",\n\t\"Ų\": \"U\",\n\t\"ų\": \"u\",\n\t\"Ȗ\": \"U\",\n\t\"ȗ\": \"u\",\n\t\"V̆\": \"V\",\n\t\"v̆\": \"v\",\n\t\"Ŵ\": \"W\",\n\t\"ŵ\": \"w\",\n\t\"Ẃ\": \"W\",\n\t\"ẃ\": \"w\",\n\t\"X̆\": \"X\",\n\t\"x̆\": \"x\",\n\t\"Ŷ\": \"Y\",\n\t\"ŷ\": \"y\",\n\t\"Ÿ\": \"Y\",\n\t\"Y̆\": \"Y\",\n\t\"y̆\": \"y\",\n\t\"Ź\": \"Z\",\n\t\"ź\": \"z\",\n\t\"Ż\": \"Z\",\n\t\"ż\": \"z\",\n\t\"Ž\": \"Z\",\n\t\"ž\": \"z\",\n\t\"ſ\": \"s\",\n\t\"ƒ\": \"f\",\n\t\"Ơ\": \"O\",\n\t\"ơ\": \"o\",\n\t\"Ư\": \"U\",\n\t\"ư\": \"u\",\n\t\"Ǎ\": \"A\",\n\t\"ǎ\": \"a\",\n\t\"Ǐ\": \"I\",\n\t\"ǐ\": \"i\",\n\t\"Ǒ\": \"O\",\n\t\"ǒ\": \"o\",\n\t\"Ǔ\": \"U\",\n\t\"ǔ\": \"u\",\n\t\"Ǖ\": \"U\",\n\t\"ǖ\": \"u\",\n\t\"Ǘ\": \"U\",\n\t\"ǘ\": \"u\",\n\t\"Ǚ\": \"U\",\n\t\"ǚ\": \"u\",\n\t\"Ǜ\": \"U\",\n\t\"ǜ\": \"u\",\n\t\"Ứ\": \"U\",\n\t\"ứ\": \"u\",\n\t\"Ṹ\": \"U\",\n\t\"ṹ\": \"u\",\n\t\"Ǻ\": \"A\",\n\t\"ǻ\": \"a\",\n\t\"Ǽ\": \"AE\",\n\t\"ǽ\": \"ae\",\n\t\"Ǿ\": \"O\",\n\t\"ǿ\": \"o\",\n\t\"Þ\": \"TH\",\n\t\"þ\": \"th\",\n\t\"Ṕ\": \"P\",\n\t\"ṕ\": \"p\",\n\t\"Ṥ\": \"S\",\n\t\"ṥ\": \"s\",\n\t\"X́\": \"X\",\n\t\"x́\": \"x\",\n\t\"Ѓ\": \"Г\",\n\t\"ѓ\": \"г\",\n\t\"Ќ\": \"К\",\n\t\"ќ\": \"к\",\n\t\"A̋\": \"A\",\n\t\"a̋\": \"a\",\n\t\"E̋\": \"E\",\n\t\"e̋\": \"e\",\n\t\"I̋\": \"I\",\n\t\"i̋\": \"i\",\n\t\"Ǹ\": \"N\",\n\t\"ǹ\": \"n\",\n\t\"Ồ\": \"O\",\n\t\"ồ\": \"o\",\n\t\"Ṑ\": \"O\",\n\t\"ṑ\": \"o\",\n\t\"Ừ\": \"U\",\n\t\"ừ\": \"u\",\n\t\"Ẁ\": \"W\",\n\t\"ẁ\": \"w\",\n\t\"Ỳ\": \"Y\",\n\t\"ỳ\": \"y\",\n\t\"Ȁ\": \"A\",\n\t\"ȁ\": \"a\",\n\t\"Ȅ\": \"E\",\n\t\"ȅ\": \"e\",\n\t\"Ȉ\": \"I\",\n\t\"ȉ\": \"i\",\n\t\"Ȍ\": \"O\",\n\t\"ȍ\": \"o\",\n\t\"Ȑ\": \"R\",\n\t\"ȑ\": \"r\",\n\t\"Ȕ\": \"U\",\n\t\"ȕ\": \"u\",\n\t\"B̌\": \"B\",\n\t\"b̌\": \"b\",\n\t\"Č̣\": \"C\",\n\t\"č̣\": \"c\",\n\t\"Ê̌\": \"E\",\n\t\"ê̌\": \"e\",\n\t\"F̌\": \"F\",\n\t\"f̌\": \"f\",\n\t\"Ǧ\": \"G\",\n\t\"ǧ\": \"g\",\n\t\"Ȟ\": \"H\",\n\t\"ȟ\": \"h\",\n\t\"J̌\": \"J\",\n\t\"ǰ\": \"j\",\n\t\"Ǩ\": \"K\",\n\t\"ǩ\": \"k\",\n\t\"M̌\": \"M\",\n\t\"m̌\": \"m\",\n\t\"P̌\": \"P\",\n\t\"p̌\": \"p\",\n\t\"Q̌\": \"Q\",\n\t\"q̌\": \"q\",\n\t\"Ř̩\": \"R\",\n\t\"ř̩\": \"r\",\n\t\"Ṧ\": \"S\",\n\t\"ṧ\": \"s\",\n\t\"V̌\": \"V\",\n\t\"v̌\": \"v\",\n\t\"W̌\": \"W\",\n\t\"w̌\": \"w\",\n\t\"X̌\": \"X\",\n\t\"x̌\": \"x\",\n\t\"Y̌\": \"Y\",\n\t\"y̌\": \"y\",\n\t\"A̧\": \"A\",\n\t\"a̧\": \"a\",\n\t\"B̧\": \"B\",\n\t\"b̧\": \"b\",\n\t\"Ḑ\": \"D\",\n\t\"ḑ\": \"d\",\n\t\"Ȩ\": \"E\",\n\t\"ȩ\": \"e\",\n\t\"Ɛ̧\": \"E\",\n\t\"ɛ̧\": \"e\",\n\t\"Ḩ\": \"H\",\n\t\"ḩ\": \"h\",\n\t\"I̧\": \"I\",\n\t\"i̧\": \"i\",\n\t\"Ɨ̧\": \"I\",\n\t\"ɨ̧\": \"i\",\n\t\"M̧\": \"M\",\n\t\"m̧\": \"m\",\n\t\"O̧\": \"O\",\n\t\"o̧\": \"o\",\n\t\"Q̧\": \"Q\",\n\t\"q̧\": \"q\",\n\t\"U̧\": \"U\",\n\t\"u̧\": \"u\",\n\t\"X̧\": \"X\",\n\t\"x̧\": \"x\",\n\t\"Z̧\": \"Z\",\n\t\"z̧\": \"z\",\n\t\"й\":\"и\",\n\t\"Й\":\"И\",\n\t\"ё\":\"е\",\n\t\"Ё\":\"Е\",\n};\n\nvar chars = Object.keys(characterMap).join('|');\nvar allAccents = new RegExp(chars, 'g');\nvar firstAccent = new RegExp(chars, '');\n\nfunction matcher(match) {\n\treturn characterMap[match];\n}\n\nvar removeAccents = function(string) {\n\treturn string.replace(allAccents, matcher);\n};\n\nvar hasAccents = function(string) {\n\treturn !!string.match(firstAccent);\n};\n\nmodule.exports = removeAccents;\nmodule.exports.has = hasAccents;\nmodule.exports.remove = removeAccents;\n", "/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n", "/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\nconst logErrorOnce = memoize( console.error ); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\nexport function sprintf( format, ...args ) {\n\ttry {\n\t\treturn sprintfjs.sprintf( format, ...args );\n\t} catch ( error ) {\n\t\tif ( error instanceof Error ) {\n\t\t\tlogErrorOnce( 'sprintf error: \\n\\n' + error.toString() );\n\t\t}\n\t\treturn format;\n\t}\n}\n", "var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n", "/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n", "import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n", "import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n", "import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n", "/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\nconst DEFAULT_LOCALE_DATA = {\n\t'': {\n\t\t/** @param {number} n */\n\t\tplural_forms( n ) {\n\t\t\treturn n === 1 ? 0 : 1;\n\t\t},\n\t},\n};\n\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/** @typedef {() => void} SubscribeCallback */\n/** @typedef {() => void} UnsubscribeCallback */\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\nexport const createI18n = ( initialData, initialDomain, hooks ) => {\n\t/**\n\t * The underlying instance of Tannin to which exported functions interface.\n\t *\n\t * @type {Tannin}\n\t */\n\tconst tannin = new Tannin( {} );\n\n\tconst listeners = new Set();\n\n\tconst notifyListeners = () => {\n\t\tlisteners.forEach( ( listener ) => listener() );\n\t};\n\n\t/**\n\t * Subscribe to changes of locale data.\n\t *\n\t * @param {SubscribeCallback} callback Subscription callback.\n\t * @return {UnsubscribeCallback} Unsubscribe callback.\n\t */\n\tconst subscribe = ( callback ) => {\n\t\tlisteners.add( callback );\n\t\treturn () => listeners.delete( callback );\n\t};\n\n\t/** @type {GetLocaleData} */\n\tconst getLocaleData = ( domain = 'default' ) => tannin.data[ domain ];\n\n\t/**\n\t * @param {LocaleData} [data]\n\t * @param {string}     [domain]\n\t */\n\tconst doSetLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t};\n\n\t\t// Populate default domain configuration (supported locale date which omits\n\t\t// a plural forms expression).\n\t\ttannin.data[ domain ][ '' ] = {\n\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\t};\n\n\t/** @type {SetLocaleData} */\n\tconst setLocaleData = ( data, domain ) => {\n\t\tdoSetLocaleData( data, domain );\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {AddLocaleData} */\n\tconst addLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t\t// Populate default domain configuration (supported locale date which omits\n\t\t\t// a plural forms expression).\n\t\t\t'': {\n\t\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t\t\t...data?.[ '' ],\n\t\t\t},\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {ResetLocaleData} */\n\tconst resetLocaleData = ( data, domain ) => {\n\t\t// Reset all current Tannin locale data.\n\t\ttannin.data = {};\n\n\t\t// Reset cached plural forms functions cache.\n\t\ttannin.pluralForms = {};\n\n\t\tsetLocaleData( data, domain );\n\t};\n\n\t/**\n\t * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n\t * otherwise previously assigned.\n\t *\n\t * @param {string|undefined} domain   Domain to retrieve the translated text.\n\t * @param {string|undefined} context  Context information for the translators.\n\t * @param {string}           single   Text to translate if non-plural. Used as\n\t *                                    fallback return value on a caught error.\n\t * @param {string}           [plural] The text to be used if the number is\n\t *                                    plural.\n\t * @param {number}           [number] The number to compare against to use\n\t *                                    either the singular or plural form.\n\t *\n\t * @return {string} The translated string.\n\t */\n\tconst dcnpgettext = (\n\t\tdomain = 'default',\n\t\tcontext,\n\t\tsingle,\n\t\tplural,\n\t\tnumber\n\t) => {\n\t\tif ( ! tannin.data[ domain ] ) {\n\t\t\t// Use `doSetLocaleData` to set silently, without notifying listeners.\n\t\t\tdoSetLocaleData( undefined, domain );\n\t\t}\n\n\t\treturn tannin.dcnpgettext( domain, context, single, plural, number );\n\t};\n\n\t/** @type {GetFilterDomain} */\n\tconst getFilterDomain = ( domain = 'default' ) => domain;\n\n\t/** @type {__} */\n\tconst __ = ( text, domain ) => {\n\t\tlet translation = dcnpgettext( domain, undefined, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_x} */\n\tconst _x = ( text, context, domain ) => {\n\t\tlet translation = dcnpgettext( domain, context, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation based on context information.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_n} */\n\tconst _n = ( single, plural, number, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tundefined,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_nx} */\n\tconst _nx = ( single, plural, number, context, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tcontext,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string with gettext context.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {IsRtl} */\n\tconst isRTL = () => {\n\t\treturn 'rtl' === _x( 'ltr', 'text direction' );\n\t};\n\n\t/** @type {HasTranslation} */\n\tconst hasTranslation = ( single, context, domain ) => {\n\t\tconst key = context ? context + '\\u0004' + single : single;\n\t\tlet result = !! tannin.data?.[ domain ?? 'default' ]?.[ key ];\n\t\tif ( hooks ) {\n\t\t\t/**\n\t\t\t * Filters the presence of a translation in the locale data.\n\t\t\t *\n\t\t\t * @param {boolean} hasTranslation Whether the translation is present or not..\n\t\t\t * @param {string}  single         The singular form of the translated text (used as key in locale data)\n\t\t\t * @param {string}  context        Context information for the translators.\n\t\t\t * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n\t\t\t */\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation',\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation_' + getFilterDomain( domain ),\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t};\n\n\tif ( initialData ) {\n\t\tsetLocaleData( initialData, initialDomain );\n\t}\n\n\tif ( hooks ) {\n\t\t/**\n\t\t * @param {string} hookName\n\t\t */\n\t\tconst onHookAddedOrRemoved = ( hookName ) => {\n\t\t\tif ( I18N_HOOK_REGEXP.test( hookName ) ) {\n\t\t\t\tnotifyListeners();\n\t\t\t}\n\t\t};\n\n\t\thooks.addAction( 'hookAdded', 'core/i18n', onHookAddedOrRemoved );\n\t\thooks.addAction( 'hookRemoved', 'core/i18n', onHookAddedOrRemoved );\n\t}\n\n\treturn {\n\t\tgetLocaleData,\n\t\tsetLocaleData,\n\t\taddLocaleData,\n\t\tresetLocaleData,\n\t\tsubscribe,\n\t\t__,\n\t\t_x,\n\t\t_n,\n\t\t_nx,\n\t\tisRTL,\n\t\thasTranslation,\n\t};\n};\n", "/**\n * Validate a namespace string.\n *\n * @param {string} namespace The namespace to validate - should take the form\n *                           `vendor/plugin/function`.\n *\n * @return {boolean} Whether the namespace is valid.\n */\nfunction validateNamespace( namespace ) {\n\tif ( 'string' !== typeof namespace || '' === namespace ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The namespace must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.\\-\\/]*$/.test( namespace ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateNamespace;\n", "/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName( hookName ) {\n\tif ( 'string' !== typeof hookName || '' === hookName ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( /^__/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name cannot begin with `__`.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.-]*$/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The hook name can only contain numbers, letters, dashes, periods and underscores.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateHookName;\n", "/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\nfunction createAddHook( hooks, storeKey ) {\n\treturn function addHook( hookName, namespace, callback, priority = 10 ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'function' !== typeof callback ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( 'The hook callback must be a function.' );\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate numeric priority\n\t\tif ( 'number' !== typeof priority ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t'If specified, the hook priority must be a number.'\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = { callback, priority, namespace };\n\n\t\tif ( hooksStore[ hookName ] ) {\n\t\t\t// Find the correct insert index of the new hook.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t\t/** @type {number} */\n\t\t\tlet i;\n\t\t\tfor ( i = handlers.length; i > 0; i-- ) {\n\t\t\t\tif ( priority >= handlers[ i - 1 ].priority ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( i === handlers.length ) {\n\t\t\t\t// If append, operate via direct assignment.\n\t\t\t\thandlers[ i ] = handler;\n\t\t\t} else {\n\t\t\t\t// Otherwise, insert before index via splice.\n\t\t\t\thandlers.splice( i, 0, handler );\n\t\t\t}\n\n\t\t\t// We may also be currently executing this hook.  If the callback\n\t\t\t// we're adding would come after the current callback, there's no\n\t\t\t// problem; otherwise we need to increase the execution index of\n\t\t\t// any other runs by 1 to account for the added element.\n\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\tif (\n\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t) {\n\t\t\t\t\thookInfo.currentIndex++;\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\t// This is the first hook of its type.\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [ handler ],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\tif ( hookName !== 'hookAdded' ) {\n\t\t\thooks.doAction(\n\t\t\t\t'hookAdded',\n\t\t\t\thookName,\n\t\t\t\tnamespace,\n\t\t\t\tcallback,\n\t\t\t\tpriority\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport default createAddHook;\n", "/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback RemoveHook\n * Removes the specified callback (or all callbacks) from the hook with a given hookName\n * and namespace.\n *\n * @param {string} hookName  The name of the hook to modify.\n * @param {string} namespace The unique namespace identifying the callback in the\n *                           form `vendor/plugin/function`.\n *\n * @return {number | undefined} The number of callbacks removed.\n */\n\n/**\n * Returns a function which, when invoked, will remove a specified hook or all\n * hooks by the given name.\n *\n * @param {import('.').Hooks}    hooks             Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,\n *                                                 without regard to namespace. Used to create\n *                                                 `removeAll*` functions.\n *\n * @return {RemoveHook} Function that removes hooks.\n */\nfunction createRemoveHook( hooks, storeKey, removeAll = false ) {\n\treturn function removeHook( hookName, namespace ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! removeAll && ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Bail if no hooks exist by this name.\n\t\tif ( ! hooksStore[ hookName ] ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet handlersRemoved = 0;\n\n\t\tif ( removeAll ) {\n\t\t\thandlersRemoved = hooksStore[ hookName ].handlers.length;\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\truns: hooksStore[ hookName ].runs,\n\t\t\t\thandlers: [],\n\t\t\t};\n\t\t} else {\n\t\t\t// Try to find the specified callback to remove.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\t\t\tfor ( let i = handlers.length - 1; i >= 0; i-- ) {\n\t\t\t\tif ( handlers[ i ].namespace === namespace ) {\n\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\thandlersRemoved++;\n\t\t\t\t\t// This callback may also be part of a hook that is\n\t\t\t\t\t// currently executing.  If the callback we're removing\n\t\t\t\t\t// comes after the current callback, there's no problem;\n\t\t\t\t\t// otherwise we need to decrease the execution index of any\n\t\t\t\t\t// other runs by 1 to account for the removed element.\n\t\t\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\thookInfo.currentIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( hookName !== 'hookRemoved' ) {\n\t\t\thooks.doAction( 'hookRemoved', hookName, namespace );\n\t\t}\n\n\t\treturn handlersRemoved;\n\t};\n}\n\nexport default createRemoveHook;\n", "/**\n * @callback HasHook\n *\n * Returns whether any handlers are attached for the given hookName and optional namespace.\n *\n * @param {string} hookName    The name of the hook to check for.\n * @param {string} [namespace] Optional. The unique namespace identifying the callback\n *                             in the form `vendor/plugin/function`.\n *\n * @return {boolean} Whether there are handlers that are attached to the given hook.\n */\n/**\n * Returns a function which, when invoked, will return whether any handlers are\n * attached to a particular hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {HasHook} Function that returns whether any handlers are\n *                   attached to a particular hook and optional namespace.\n */\nfunction createHasHook( hooks, storeKey ) {\n\treturn function hasHook( hookName, namespace ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\t// Use the namespace if provided.\n\t\tif ( 'undefined' !== typeof namespace ) {\n\t\t\treturn (\n\t\t\t\thookName in hooksStore &&\n\t\t\t\thooksStore[ hookName ].handlers.some(\n\t\t\t\t\t( hook ) => hook.namespace === namespace\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn hookName in hooksStore;\n\t};\n}\n\nexport default createHasHook;\n", "/**\n * Returns a function which, when invoked, will execute all callbacks\n * registered to a hook of the specified type, optionally returning the final\n * value of the call chain.\n *\n * @param {import('.').Hooks}    hooks                  Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [returnFirstArg=false] Whether each hook callback is expected to\n *                                                      return its first argument.\n *\n * @return {(hookName:string, ...args: unknown[]) => undefined|unknown} Function that runs hook callbacks.\n */\nfunction createRunHook( hooks, storeKey, returnFirstArg = false ) {\n\treturn function runHooks( hookName, ...args ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! hooksStore[ hookName ] ) {\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\thooksStore[ hookName ].runs++;\n\n\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t// The following code is stripped from production builds.\n\t\tif ( 'production' !== process.env.NODE_ENV ) {\n\t\t\t// Handle any 'all' hooks registered.\n\t\t\tif ( 'hookAdded' !== hookName && hooksStore.all ) {\n\t\t\t\thandlers.push( ...hooksStore.all.handlers );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! handlers || ! handlers.length ) {\n\t\t\treturn returnFirstArg ? args[ 0 ] : undefined;\n\t\t}\n\n\t\tconst hookInfo = {\n\t\t\tname: hookName,\n\t\t\tcurrentIndex: 0,\n\t\t};\n\n\t\thooksStore.__current.push( hookInfo );\n\n\t\twhile ( hookInfo.currentIndex < handlers.length ) {\n\t\t\tconst handler = handlers[ hookInfo.currentIndex ];\n\n\t\t\tconst result = handler.callback.apply( null, args );\n\t\t\tif ( returnFirstArg ) {\n\t\t\t\targs[ 0 ] = result;\n\t\t\t}\n\n\t\t\thookInfo.currentIndex++;\n\t\t}\n\n\t\thooksStore.__current.pop();\n\n\t\tif ( returnFirstArg ) {\n\t\t\treturn args[ 0 ];\n\t\t}\n\n\t\treturn undefined;\n\t};\n}\n\nexport default createRunHook;\n", "/**\n * Returns a function which, when invoked, will return the name of the\n * currently running hook, or `null` if no hook of the given type is currently\n * running.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {() => string | null} Function that returns the current hook name or null.\n */\nfunction createCurrentHook( hooks, storeKey ) {\n\treturn function currentHook() {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\treturn (\n\t\t\thooksStore.__current[ hooksStore.__current.length - 1 ]?.name ??\n\t\t\tnull\n\t\t);\n\t};\n}\n\nexport default createCurrentHook;\n", "/**\n * @callback DoingHook\n * Returns whether a hook is currently being executed.\n *\n * @param {string} [hookName] The name of the hook to check for.  If\n *                            omitted, will check for any hook being executed.\n *\n * @return {boolean} Whether the hook is being executed.\n */\n\n/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DoingHook} Function that returns whether a hook is currently\n *                     being executed.\n */\nfunction createDoingHook( hooks, storeKey ) {\n\treturn function doingHook( hookName ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\t// If the hookName was not passed, check for any current hook.\n\t\tif ( 'undefined' === typeof hookName ) {\n\t\t\treturn 'undefined' !== typeof hooksStore.__current[ 0 ];\n\t\t}\n\n\t\t// Return the __current hook.\n\t\treturn hooksStore.__current[ 0 ]\n\t\t\t? hookName === hooksStore.__current[ 0 ].name\n\t\t\t: false;\n\t};\n}\n\nexport default createDoingHook;\n", "/**\n * Internal dependencies\n */\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback DidHook\n *\n * Returns the number of times an action has been fired.\n *\n * @param {string} hookName The hook name to check.\n *\n * @return {number | undefined} The number of times the hook has run.\n */\n\n/**\n * Returns a function which, when invoked, will return the number of times a\n * hook has been called.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DidHook} Function that returns a hook's call count.\n */\nfunction createDidHook( hooks, storeKey ) {\n\treturn function didHook( hookName ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn hooksStore[ hookName ] && hooksStore[ hookName ].runs\n\t\t\t? hooksStore[ hookName ].runs\n\t\t\t: 0;\n\t};\n}\n\nexport default createDidHook;\n", "/**\n * Internal dependencies\n */\nimport createAddHook from './createAddHook';\nimport createRemoveHook from './createRemoveHook';\nimport createHasHook from './createHasHook';\nimport createRunHook from './createRunHook';\nimport createCurrentHook from './createCurrentHook';\nimport createDoingHook from './createDoingHook';\nimport createDidHook from './createDidHook';\n\n/**\n * Internal class for constructing hooks. Use `createHooks()` function\n *\n * Note, it is necessary to expose this class to make its type public.\n *\n * @private\n */\nexport class _Hooks {\n\tconstructor() {\n\t\t/** @type {import('.').Store} actions */\n\t\tthis.actions = Object.create( null );\n\t\tthis.actions.__current = [];\n\n\t\t/** @type {import('.').Store} filters */\n\t\tthis.filters = Object.create( null );\n\t\tthis.filters.__current = [];\n\n\t\tthis.addAction = createAddHook( this, 'actions' );\n\t\tthis.addFilter = createAddHook( this, 'filters' );\n\t\tthis.removeAction = createRemoveHook( this, 'actions' );\n\t\tthis.removeFilter = createRemoveHook( this, 'filters' );\n\t\tthis.hasAction = createHasHook( this, 'actions' );\n\t\tthis.hasFilter = createHasHook( this, 'filters' );\n\t\tthis.removeAllActions = createRemoveHook( this, 'actions', true );\n\t\tthis.removeAllFilters = createRemoveHook( this, 'filters', true );\n\t\tthis.doAction = createRunHook( this, 'actions' );\n\t\tthis.applyFilters = createRunHook( this, 'filters', true );\n\t\tthis.currentAction = createCurrentHook( this, 'actions' );\n\t\tthis.currentFilter = createCurrentHook( this, 'filters' );\n\t\tthis.doingAction = createDoingHook( this, 'actions' );\n\t\tthis.doingFilter = createDoingHook( this, 'filters' );\n\t\tthis.didAction = createDidHook( this, 'actions' );\n\t\tthis.didFilter = createDidHook( this, 'filters' );\n\t}\n}\n\n/** @typedef {_Hooks} Hooks */\n\n/**\n * Returns an instance of the hooks object.\n *\n * @return {Hooks} A Hooks instance.\n */\nfunction createHooks() {\n\treturn new _Hooks();\n}\n\nexport default createHooks;\n", "/**\n * Internal dependencies\n */\nimport createHooks from './createHooks';\n\n/** @typedef {(...args: any[])=>any} Callback */\n\n/**\n * @typedef Handler\n * @property {Callback} callback  The callback\n * @property {string}   namespace The namespace\n * @property {number}   priority  The namespace\n */\n\n/**\n * @typedef Hook\n * @property {Handler[]} handlers Array of handlers\n * @property {number}    runs     Run counter\n */\n\n/**\n * @typedef Current\n * @property {string} name         Hook name\n * @property {number} currentIndex The index\n */\n\n/**\n * @typedef {Record<string, Hook> & {__current: Current[]}} Store\n */\n\n/**\n * @typedef {'actions' | 'filters'} StoreKey\n */\n\n/**\n * @typedef {import('./createHooks').Hooks} Hooks\n */\n\nexport const defaultHooks = createHooks();\n\nconst {\n\taddAction,\n\taddFilter,\n\tremoveAction,\n\tremoveFilter,\n\thasAction,\n\thasFilter,\n\tremoveAllActions,\n\tremoveAllFilters,\n\tdoAction,\n\tapplyFilters,\n\tcurrentAction,\n\tcurrentFilter,\n\tdoingAction,\n\tdoingFilter,\n\tdidAction,\n\tdidFilter,\n\tactions,\n\tfilters,\n} = defaultHooks;\n\nexport {\n\tcreateHooks,\n\taddAction,\n\taddFilter,\n\tremoveAction,\n\tremoveFilter,\n\thasAction,\n\thasFilter,\n\tremoveAllActions,\n\tremoveAllFilters,\n\tdoAction,\n\tapplyFilters,\n\tcurrentAction,\n\tcurrentFilter,\n\tdoingAction,\n\tdoingFilter,\n\tdidAction,\n\tdidFilter,\n\tactions,\n\tfilters,\n};\n", "/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n\n/**\n * WordPress dependencies\n */\nimport { defaultHooks } from '@wordpress/hooks';\n\nconst i18n = createI18n( undefined, undefined, defaultHooks );\n\n/**\n * Default, singleton instance of `I18n`.\n */\nexport default i18n;\n\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\nexport const getLocaleData = i18n.getLocaleData.bind( i18n );\n\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const setLocaleData = i18n.setLocaleData.bind( i18n );\n\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const resetLocaleData = i18n.resetLocaleData.bind( i18n );\n\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\nexport const subscribe = i18n.subscribe.bind( i18n );\n\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\nexport const __ = i18n.__.bind( i18n );\n\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\nexport const _x = i18n._x.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _n = i18n._n.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _nx = i18n._nx.bind( i18n );\n\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\nexport const isRTL = i18n.isRTL.bind( i18n );\n\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\nexport const hasTranslation = i18n.hasTranslation.bind( i18n );\n", "/**\n * @param {string} nonce\n * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\n */\nfunction createNonceMiddleware( nonce ) {\n\t/**\n\t * @type {import('../types').APIFetchMiddleware & { nonce: string }}\n\t */\n\tconst middleware = ( options, next ) => {\n\t\tconst { headers = {} } = options;\n\n\t\t// If an 'X-WP-Nonce' header (or any case-insensitive variation\n\t\t// thereof) was specified, no need to add a nonce header.\n\t\tfor ( const headerName in headers ) {\n\t\t\tif (\n\t\t\t\theaderName.toLowerCase() === 'x-wp-nonce' &&\n\t\t\t\theaders[ headerName ] === middleware.nonce\n\t\t\t) {\n\t\t\t\treturn next( options );\n\t\t\t}\n\t\t}\n\n\t\treturn next( {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...headers,\n\t\t\t\t'X-WP-Nonce': middleware.nonce,\n\t\t\t},\n\t\t} );\n\t};\n\n\tmiddleware.nonce = nonce;\n\n\treturn middleware;\n}\n\nexport default createNonceMiddleware;\n", "/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst namespaceAndEndpointMiddleware = ( options, next ) => {\n\tlet path = options.path;\n\tlet namespaceTrimmed, endpointTrimmed;\n\n\tif (\n\t\ttypeof options.namespace === 'string' &&\n\t\ttypeof options.endpoint === 'string'\n\t) {\n\t\tnamespaceTrimmed = options.namespace.replace( /^\\/|\\/$/g, '' );\n\t\tendpointTrimmed = options.endpoint.replace( /^\\//, '' );\n\t\tif ( endpointTrimmed ) {\n\t\t\tpath = namespaceTrimmed + '/' + endpointTrimmed;\n\t\t} else {\n\t\t\tpath = namespaceTrimmed;\n\t\t}\n\t}\n\n\tdelete options.namespace;\n\tdelete options.endpoint;\n\n\treturn next( {\n\t\t...options,\n\t\tpath,\n\t} );\n};\n\nexport default namespaceAndEndpointMiddleware;\n", "/**\n * Internal dependencies\n */\nimport namespaceAndEndpointMiddleware from './namespace-endpoint';\n\n/**\n * @param {string} rootURL\n * @return {import('../types').APIFetchMiddleware} Root URL middleware.\n */\nconst createRootURLMiddleware = ( rootURL ) => ( options, next ) => {\n\treturn namespaceAndEndpointMiddleware( options, ( optionsWithPath ) => {\n\t\tlet url = optionsWithPath.url;\n\t\tlet path = optionsWithPath.path;\n\t\tlet apiRoot;\n\n\t\tif ( typeof path === 'string' ) {\n\t\t\tapiRoot = rootURL;\n\n\t\t\tif ( -1 !== rootURL.indexOf( '?' ) ) {\n\t\t\t\tpath = path.replace( '?', '&' );\n\t\t\t}\n\n\t\t\tpath = path.replace( /^\\//, '' );\n\n\t\t\t// API root may already include query parameter prefix if site is\n\t\t\t// configured to use plain permalinks.\n\t\t\tif (\n\t\t\t\t'string' === typeof apiRoot &&\n\t\t\t\t-1 !== apiRoot.indexOf( '?' )\n\t\t\t) {\n\t\t\t\tpath = path.replace( '?', '&' );\n\t\t\t}\n\n\t\t\turl = apiRoot + path;\n\t\t}\n\n\t\treturn next( {\n\t\t\t...optionsWithPath,\n\t\t\turl,\n\t\t} );\n\t} );\n};\n\nexport default createRootURLMiddleware;\n", "/**\n * Returns the query string part of the URL.\n *\n * @param {string} url The full URL.\n *\n * @example\n * ```js\n * const queryString = getQueryString( 'http://localhost:8080/this/is/a/test?query=true#fragment' ); // 'query=true'\n * ```\n *\n * @return {string|void} The query string part of the URL.\n */\nexport function getQueryString( url ) {\n\tlet query;\n\ttry {\n\t\tquery = new URL( url, 'http://example.com' ).search.substring( 1 );\n\t} catch ( error ) {}\n\n\tif ( query ) {\n\t\treturn query;\n\t}\n}\n", "/**\n * Generates URL-encoded query string using input query data.\n *\n * It is intended to behave equivalent as PHP's `http_build_query`, configured\n * with encoding type PHP_QUERY_RFC3986 (spaces as `%20`).\n *\n * @example\n * ```js\n * const queryString = buildQueryString( {\n *    simple: 'is ok',\n *    arrays: [ 'are', 'fine', 'too' ],\n *    objects: {\n *       evenNested: {\n *          ok: 'yes',\n *       },\n *    },\n * } );\n * // \"simple=is%20ok&arrays%5B0%5D=are&arrays%5B1%5D=fine&arrays%5B2%5D=too&objects%5BevenNested%5D%5Bok%5D=yes\"\n * ```\n *\n * @param {Record<string,*>} data Data to encode.\n *\n * @return {string} Query string.\n */\nexport function buildQueryString( data ) {\n\tlet string = '';\n\n\tconst stack = Object.entries( data );\n\n\tlet pair;\n\twhile ( ( pair = stack.shift() ) ) {\n\t\tlet [ key, value ] = pair;\n\n\t\t// Support building deeply nested data, from array or object values.\n\t\tconst hasNestedData =\n\t\t\tArray.isArray( value ) || ( value && value.constructor === Object );\n\n\t\tif ( hasNestedData ) {\n\t\t\t// Push array or object values onto the stack as composed of their\n\t\t\t// original key and nested index or key, retaining order by a\n\t\t\t// combination of Array#reverse and Array#unshift onto the stack.\n\t\t\tconst valuePairs = Object.entries( value ).reverse();\n\t\t\tfor ( const [ member, memberValue ] of valuePairs ) {\n\t\t\t\tstack.unshift( [ `${ key }[${ member }]`, memberValue ] );\n\t\t\t}\n\t\t} else if ( value !== undefined ) {\n\t\t\t// Null is treated as special case, equivalent to empty string.\n\t\t\tif ( value === null ) {\n\t\t\t\tvalue = '';\n\t\t\t}\n\n\t\t\tstring +=\n\t\t\t\t'&' + [ key, value ].map( encodeURIComponent ).join( '=' );\n\t\t}\n\t}\n\n\t// Loop will concatenate with leading `&`, but it's only expected for all\n\t// but the first query parameter. This strips the leading `&`, while still\n\t// accounting for the case that the string may in-fact be empty.\n\treturn string.substr( 1 );\n}\n", "/**\n * Safely decodes a URI component with `decodeURIComponent`. Returns the URI component unmodified if\n * `decodeURIComponent` throws an error.\n *\n * @param {string} uriComponent URI component to decode.\n *\n * @return {string} Decoded URI component if possible.\n */\nexport function safeDecodeURIComponent( uriComponent ) {\n\ttry {\n\t\treturn decodeURIComponent( uriComponent );\n\t} catch ( uriComponentError ) {\n\t\treturn uriComponent;\n\t}\n}\n", "/**\n * Internal dependencies\n */\nimport { safeDecodeURIComponent } from './safe-decode-uri-component';\nimport { getQueryString } from './get-query-string';\n\n/** @typedef {import('./get-query-arg').QueryArgParsed} QueryArgParsed */\n\n/**\n * @typedef {Record<string,QueryArgParsed>} QueryArgs\n */\n\n/**\n * Sets a value in object deeply by a given array of path segments. Mutates the\n * object reference.\n *\n * @param {Record<string,*>} object Object in which to assign.\n * @param {string[]}         path   Path segment at which to set value.\n * @param {*}                value  Value to set.\n */\nfunction setPath( object, path, value ) {\n\tconst length = path.length;\n\tconst lastIndex = length - 1;\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tlet key = path[ i ];\n\n\t\tif ( ! key && Array.isArray( object ) ) {\n\t\t\t// If key is empty string and next value is array, derive key from\n\t\t\t// the current length of the array.\n\t\t\tkey = object.length.toString();\n\t\t}\n\n\t\tkey = [ '__proto__', 'constructor', 'prototype' ].includes( key )\n\t\t\t? key.toUpperCase()\n\t\t\t: key;\n\n\t\t// If the next key in the path is numeric (or empty string), it will be\n\t\t// created as an array. Otherwise, it will be created as an object.\n\t\tconst isNextKeyArrayIndex = ! isNaN( Number( path[ i + 1 ] ) );\n\n\t\tobject[ key ] =\n\t\t\ti === lastIndex\n\t\t\t\t? // If at end of path, assign the intended value.\n\t\t\t\t  value\n\t\t\t\t: // Otherwise, advance to the next object in the path, creating\n\t\t\t\t  // it if it does not yet exist.\n\t\t\t\t  object[ key ] || ( isNextKeyArrayIndex ? [] : {} );\n\n\t\tif ( Array.isArray( object[ key ] ) && ! isNextKeyArrayIndex ) {\n\t\t\t// If we current key is non-numeric, but the next value is an\n\t\t\t// array, coerce the value to an object.\n\t\t\tobject[ key ] = { ...object[ key ] };\n\t\t}\n\n\t\t// Update working reference object to the next in the path.\n\t\tobject = object[ key ];\n\t}\n}\n\n/**\n * Returns an object of query arguments of the given URL. If the given URL is\n * invalid or has no querystring, an empty object is returned.\n *\n * @param {string} url URL.\n *\n * @example\n * ```js\n * const foo = getQueryArgs( 'https://wordpress.org?foo=bar&bar=baz' );\n * // { \"foo\": \"bar\", \"bar\": \"baz\" }\n * ```\n *\n * @return {QueryArgs} Query args object.\n */\nexport function getQueryArgs( url ) {\n\treturn (\n\t\t( getQueryString( url ) || '' )\n\t\t\t// Normalize space encoding, accounting for PHP URL encoding\n\t\t\t// corresponding to `application/x-www-form-urlencoded`.\n\t\t\t//\n\t\t\t// See: https://tools.ietf.org/html/rfc1866#section-8.2.1\n\t\t\t.replace( /\\+/g, '%20' )\n\t\t\t.split( '&' )\n\t\t\t.reduce( ( accumulator, keyValue ) => {\n\t\t\t\tconst [ key, value = '' ] = keyValue\n\t\t\t\t\t.split( '=' )\n\t\t\t\t\t// Filtering avoids decoding as `undefined` for value, where\n\t\t\t\t\t// default is restored in destructuring assignment.\n\t\t\t\t\t.filter( Boolean )\n\t\t\t\t\t.map( safeDecodeURIComponent );\n\n\t\t\t\tif ( key ) {\n\t\t\t\t\tconst segments = key.replace( /\\]/g, '' ).split( '[' );\n\t\t\t\t\tsetPath( accumulator, segments, value );\n\t\t\t\t}\n\n\t\t\t\treturn accumulator;\n\t\t\t}, Object.create( null ) )\n\t);\n}\n", "/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\nimport { buildQueryString } from './build-query-string';\n\n/**\n * Appends arguments as querystring to the provided URL. If the URL already\n * includes query arguments, the arguments are merged with (and take precedent\n * over) the existing set.\n *\n * @param {string} [url=''] URL to which arguments should be appended. If omitted,\n *                          only the resulting querystring is returned.\n * @param {Object} [args]   Query arguments to apply to URL.\n *\n * @example\n * ```js\n * const newURL = addQueryArgs( 'https://google.com', { q: 'test' } ); // https://google.com/?q=test\n * ```\n *\n * @return {string} URL with arguments applied.\n */\nexport function addQueryArgs( url = '', args ) {\n\t// If no arguments are to be appended, return original URL.\n\tif ( ! args || ! Object.keys( args ).length ) {\n\t\treturn url;\n\t}\n\n\tlet baseUrl = url;\n\n\t// Determine whether URL already had query arguments.\n\tconst queryStringIndex = url.indexOf( '?' );\n\tif ( queryStringIndex !== -1 ) {\n\t\t// Merge into existing query arguments.\n\t\targs = Object.assign( getQueryArgs( url ), args );\n\n\t\t// Change working base URL to omit previous query arguments.\n\t\tbaseUrl = baseUrl.substr( 0, queryStringIndex );\n\t}\n\n\treturn baseUrl + '?' + buildQueryString( args );\n}\n", "/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\n\n/**\n * @typedef {{[key: string]: QueryArgParsed}} QueryArgObject\n */\n\n/**\n * @typedef {string|string[]|QueryArgObject} QueryArgParsed\n */\n\n/**\n * Returns a single query argument of the url\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const foo = getQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'foo' ); // bar\n * ```\n *\n * @return {QueryArgParsed|void} Query arg value.\n */\nexport function getQueryArg( url, arg ) {\n\treturn getQueryArgs( url )[ arg ];\n}\n", "/**\n * Internal dependencies\n */\nimport { getQueryArg } from './get-query-arg';\n\n/**\n * Determines whether the URL contains a given query arg.\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const hasBar = hasQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'bar' ); // true\n * ```\n *\n * @return {boolean} Whether or not the URL contains the query arg.\n */\nexport function hasQueryArg( url, arg ) {\n\treturn getQueryArg( url, arg ) !== undefined;\n}\n", "/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\nimport { buildQueryString } from './build-query-string';\n\n/**\n * Removes arguments from the query string of the url\n *\n * @param {string}    url  URL.\n * @param {...string} args Query Args.\n *\n * @example\n * ```js\n * const newUrl = removeQueryArgs( 'https://wordpress.org?foo=bar&bar=baz&baz=foobar', 'foo', 'bar' ); // https://wordpress.org?baz=foobar\n * ```\n *\n * @return {string} Updated URL.\n */\nexport function removeQueryArgs( url, ...args ) {\n\tconst queryStringIndex = url.indexOf( '?' );\n\tif ( queryStringIndex === -1 ) {\n\t\treturn url;\n\t}\n\n\tconst query = getQueryArgs( url );\n\tconst baseURL = url.substr( 0, queryStringIndex );\n\targs.forEach( ( arg ) => delete query[ arg ] );\n\tconst queryString = buildQueryString( query );\n\treturn queryString ? baseURL + '?' + queryString : baseURL;\n}\n", "/**\n * External dependencies\n */\nimport removeAccents from 'remove-accents';\n\n/**\n * Performs some basic cleanup of a string for use as a post slug.\n *\n * This replicates some of what `sanitize_title()` does in WordPress core, but\n * is only designed to approximate what the slug will be.\n *\n * Converts Latin-1 Supplement and Latin Extended-A letters to basic Latin\n * letters. Removes combining diacritical marks. Converts whitespace, periods,\n * and forward slashes to hyphens. Removes any remaining non-word characters\n * except hyphens. Converts remaining string to lowercase. It does not account\n * for octets, HTML entities, or other encoded characters.\n *\n * @param {string} string Title or slug to be processed.\n *\n * @return {string} Processed string.\n */\nexport function cleanForSlug( string ) {\n\tif ( ! string ) {\n\t\treturn '';\n\t}\n\treturn (\n\t\tremoveAccents( string )\n\t\t\t// Convert each group of whitespace, periods, and forward slashes to a hyphen.\n\t\t\t.replace( /[\\s\\./]+/g, '-' )\n\t\t\t// Remove anything that's not a letter, number, underscore or hyphen.\n\t\t\t.replace( /[^\\p{L}\\p{N}_-]+/gu, '' )\n\t\t\t// Convert to lowercase\n\t\t\t.toLowerCase()\n\t\t\t// Replace multiple hyphens with a single one.\n\t\t\t.replace( /-+/g, '-' )\n\t\t\t// Remove any remaining leading or trailing hyphens.\n\t\t\t.replace( /(^-+)|(-+$)/g, '' )\n\t);\n}\n", "/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nexport function normalizePath( path ) {\n\tconst splitted = path.split( '?' );\n\tconst query = splitted[ 1 ];\n\tconst base = splitted[ 0 ];\n\tif ( ! query ) {\n\t\treturn base;\n\t}\n\n\t// 'b=1%2C2&c=2&a=5'\n\treturn (\n\t\tbase +\n\t\t'?' +\n\t\tquery\n\t\t\t// [ 'b=1%2C2', 'c=2', 'a=5' ]\n\t\t\t.split( '&' )\n\t\t\t// [ [ 'b, '1%2C2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( entry ) => entry.split( '=' ) )\n\t\t\t// [ [ 'b', '1,2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( pair ) => pair.map( decodeURIComponent ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1,2' ], [ 'c', '2' ] ]\n\t\t\t.sort( ( a, b ) => a[ 0 ].localeCompare( b[ 0 ] ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1%2C2' ], [ 'c', '2' ] ]\n\t\t\t.map( ( pair ) => pair.map( encodeURIComponent ) )\n\t\t\t// [ 'a=5', 'b=1%2C2', 'c=2' ]\n\t\t\t.map( ( pair ) => pair.join( '=' ) )\n\t\t\t// 'a=5&b=1%2C2&c=2'\n\t\t\t.join( '&' )\n\t);\n}\n", "/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArgs, normalizePath } from '@wordpress/url';\n\n/**\n * @param {Record<string, any>} preloadedData\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\nfunction createPreloadingMiddleware( preloadedData ) {\n\tconst cache = Object.fromEntries(\n\t\tObject.entries( preloadedData ).map( ( [ path, data ] ) => [\n\t\t\tnormalizePath( path ),\n\t\t\tdata,\n\t\t] )\n\t);\n\n\treturn ( options, next ) => {\n\t\tconst { parse = true } = options;\n\t\t/** @type {string | void} */\n\t\tlet rawPath = options.path;\n\t\tif ( ! rawPath && options.url ) {\n\t\t\tconst { rest_route: pathFromQuery, ...queryArgs } = getQueryArgs(\n\t\t\t\toptions.url\n\t\t\t);\n\n\t\t\tif ( typeof pathFromQuery === 'string' ) {\n\t\t\t\trawPath = addQueryArgs( pathFromQuery, queryArgs );\n\t\t\t}\n\t\t}\n\n\t\tif ( typeof rawPath !== 'string' ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst method = options.method || 'GET';\n\t\tconst path = normalizePath( rawPath );\n\n\t\tif ( 'GET' === method && cache[ path ] ) {\n\t\t\tconst cacheData = cache[ path ];\n\n\t\t\t// Unsetting the cache key ensures that the data is only used a single time.\n\t\t\tdelete cache[ path ];\n\n\t\t\treturn prepareResponse( cacheData, !! parse );\n\t\t} else if (\n\t\t\t'OPTIONS' === method &&\n\t\t\tcache[ method ] &&\n\t\t\tcache[ method ][ path ]\n\t\t) {\n\t\t\tconst cacheData = cache[ method ][ path ];\n\n\t\t\t// Unsetting the cache key ensures that the data is only used a single time.\n\t\t\tdelete cache[ method ][ path ];\n\n\t\t\treturn prepareResponse( cacheData, !! parse );\n\t\t}\n\n\t\treturn next( options );\n\t};\n}\n\n/**\n * This is a helper function that sends a success response.\n *\n * @param {Record<string, any>} responseData\n * @param {boolean}             parse\n * @return {Promise<any>} Promise with the response.\n */\nfunction prepareResponse( responseData, parse ) {\n\treturn Promise.resolve(\n\t\tparse\n\t\t\t? responseData.body\n\t\t\t: new window.Response( JSON.stringify( responseData.body ), {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\tstatusText: 'OK',\n\t\t\t\t\theaders: responseData.headers,\n\t\t\t  } )\n\t);\n}\n\nexport default createPreloadingMiddleware;\n", "/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport apiFetch from '..';\n\n/**\n * Apply query arguments to both URL and Path, whichever is present.\n *\n * @param {import('../types').APIFetchOptions} props\n * @param {Record<string, string | number>}    queryArgs\n * @return {import('../types').APIFetchOptions} The request with the modified query args\n */\nconst modifyQuery = ( { path, url, ...options }, queryArgs ) => ( {\n\t...options,\n\turl: url && addQueryArgs( url, queryArgs ),\n\tpath: path && addQueryArgs( path, queryArgs ),\n} );\n\n/**\n * Duplicates parsing functionality from apiFetch.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response json.\n */\nconst parseResponse = ( response ) =>\n\tresponse.json ? response.json() : Promise.reject( response );\n\n/**\n * @param {string | null} linkHeader\n * @return {{ next?: string }} The parsed link header.\n */\nconst parseLinkHeader = ( linkHeader ) => {\n\tif ( ! linkHeader ) {\n\t\treturn {};\n\t}\n\tconst match = linkHeader.match( /<([^>]+)>; rel=\"next\"/ );\n\treturn match\n\t\t? {\n\t\t\t\tnext: match[ 1 ],\n\t\t  }\n\t\t: {};\n};\n\n/**\n * @param {Response} response\n * @return {string | undefined} The next page URL.\n */\nconst getNextPageUrl = ( response ) => {\n\tconst { next } = parseLinkHeader( response.headers.get( 'link' ) );\n\treturn next;\n};\n\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request contains an unbounded query.\n */\nconst requestContainsUnboundedQuery = ( options ) => {\n\tconst pathIsUnbounded =\n\t\t!! options.path && options.path.indexOf( 'per_page=-1' ) !== -1;\n\tconst urlIsUnbounded =\n\t\t!! options.url && options.url.indexOf( 'per_page=-1' ) !== -1;\n\treturn pathIsUnbounded || urlIsUnbounded;\n};\n\n/**\n * The REST API enforces an upper limit on the per_page option. To handle large\n * collections, apiFetch consumers can pass `per_page=-1`; this middleware will\n * then recursively assemble a full response array from all available pages.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst fetchAllMiddleware = async ( options, next ) => {\n\tif ( options.parse === false ) {\n\t\t// If a consumer has opted out of parsing, do not apply middleware.\n\t\treturn next( options );\n\t}\n\tif ( ! requestContainsUnboundedQuery( options ) ) {\n\t\t// If neither url nor path is requesting all items, do not apply middleware.\n\t\treturn next( options );\n\t}\n\n\t// Retrieve requested page of results.\n\tconst response = await apiFetch( {\n\t\t...modifyQuery( options, {\n\t\t\tper_page: 100,\n\t\t} ),\n\t\t// Ensure headers are returned for page 1.\n\t\tparse: false,\n\t} );\n\n\tconst results = await parseResponse( response );\n\n\tif ( ! Array.isArray( results ) ) {\n\t\t// We have no reliable way of merging non-array results.\n\t\treturn results;\n\t}\n\n\tlet nextPage = getNextPageUrl( response );\n\n\tif ( ! nextPage ) {\n\t\t// There are no further pages to request.\n\t\treturn results;\n\t}\n\n\t// Iteratively fetch all remaining pages until no \"next\" header is found.\n\tlet mergedResults = /** @type {any[]} */ ( [] ).concat( results );\n\twhile ( nextPage ) {\n\t\tconst nextResponse = await apiFetch( {\n\t\t\t...options,\n\t\t\t// Ensure the URL for the next page is used instead of any provided path.\n\t\t\tpath: undefined,\n\t\t\turl: nextPage,\n\t\t\t// Ensure we still get headers so we can identify the next page.\n\t\t\tparse: false,\n\t\t} );\n\t\tconst nextResults = await parseResponse( nextResponse );\n\t\tmergedResults = mergedResults.concat( nextResults );\n\t\tnextPage = getNextPageUrl( nextResponse );\n\t}\n\treturn mergedResults;\n};\n\nexport default fetchAllMiddleware;\n", "/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set<string>}\n */\nconst OVERRIDE_METHODS = new Set( [ 'PATCH', 'PUT', 'DELETE' ] );\n\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\nconst DEFAULT_METHOD = 'GET';\n\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst httpV1Middleware = ( options, next ) => {\n\tconst { method = DEFAULT_METHOD } = options;\n\tif ( OVERRIDE_METHODS.has( method.toUpperCase() ) ) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...options.headers,\n\t\t\t\t'X-HTTP-Method-Override': method,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t};\n\t}\n\n\treturn next( options );\n};\n\nexport default httpV1Middleware;\n", "/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n\n/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst userLocaleMiddleware = ( options, next ) => {\n\tif (\n\t\ttypeof options.url === 'string' &&\n\t\t! hasQueryArg( options.url, '_locale' )\n\t) {\n\t\toptions.url = addQueryArgs( options.url, { _locale: 'user' } );\n\t}\n\n\tif (\n\t\ttypeof options.path === 'string' &&\n\t\t! hasQueryArg( options.path, '_locale' )\n\t) {\n\t\toptions.path = addQueryArgs( options.path, { _locale: 'user' } );\n\t}\n\n\treturn next( options );\n};\n\nexport default userLocaleMiddleware;\n", "/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Parses the apiFetch response.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any> | null | Response} Parsed response.\n */\nconst parseResponse = ( response, shouldParseResponse = true ) => {\n\tif ( shouldParseResponse ) {\n\t\tif ( response.status === 204 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn response.json ? response.json() : Promise.reject( response );\n\t}\n\n\treturn response;\n};\n\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\nconst parseJsonAndNormalizeError = ( response ) => {\n\tconst invalidJsonError = {\n\t\tcode: 'invalid_json',\n\t\tmessage: __( 'The response is not a valid JSON response.' ),\n\t};\n\n\tif ( ! response || ! response.json ) {\n\t\tthrow invalidJsonError;\n\t}\n\n\treturn response.json().catch( () => {\n\t\tthrow invalidJsonError;\n\t} );\n};\n\n/**\n * Parses the apiFetch response properly and normalize response errors.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any>} Parsed response.\n */\nexport const parseResponseAndNormalizeError = (\n\tresponse,\n\tshouldParseResponse = true\n) => {\n\treturn Promise.resolve(\n\t\tparseResponse( response, shouldParseResponse )\n\t).catch( ( res ) => parseAndThrowError( res, shouldParseResponse ) );\n};\n\n/**\n * Parses a response, throwing an error if parsing the response fails.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n * @return {Promise<any>} Parsed response.\n */\nexport function parseAndThrowError( response, shouldParseResponse = true ) {\n\tif ( ! shouldParseResponse ) {\n\t\tthrow response;\n\t}\n\n\treturn parseJsonAndNormalizeError( response ).then( ( error ) => {\n\t\tconst unknownError = {\n\t\t\tcode: 'unknown_error',\n\t\t\tmessage: __( 'An unknown error occurred.' ),\n\t\t};\n\n\t\tthrow error || unknownError;\n\t} );\n}\n", "/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tparseAndThrowError,\n\tparseResponseAndNormalizeError,\n} from '../utils/response';\n\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request is for media upload.\n */\nfunction isMediaUploadRequest( options ) {\n\tconst isCreateMethod = !! options.method && options.method === 'POST';\n\tconst isMediaEndpoint =\n\t\t( !! options.path && options.path.indexOf( '/wp/v2/media' ) !== -1 ) ||\n\t\t( !! options.url && options.url.indexOf( '/wp/v2/media' ) !== -1 );\n\n\treturn isMediaEndpoint && isCreateMethod;\n}\n\n/**\n * Middleware handling media upload failures and retries.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst mediaUploadMiddleware = ( options, next ) => {\n\tif ( ! isMediaUploadRequest( options ) ) {\n\t\treturn next( options );\n\t}\n\n\tlet retries = 0;\n\tconst maxRetries = 5;\n\n\t/**\n\t * @param {string} attachmentId\n\t * @return {Promise<any>} Processed post response.\n\t */\n\tconst postProcess = ( attachmentId ) => {\n\t\tretries++;\n\t\treturn next( {\n\t\t\tpath: `/wp/v2/media/${ attachmentId }/post-process`,\n\t\t\tmethod: 'POST',\n\t\t\tdata: { action: 'create-image-subsizes' },\n\t\t\tparse: false,\n\t\t} ).catch( () => {\n\t\t\tif ( retries < maxRetries ) {\n\t\t\t\treturn postProcess( attachmentId );\n\t\t\t}\n\t\t\tnext( {\n\t\t\t\tpath: `/wp/v2/media/${ attachmentId }?force=true`,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t} );\n\n\t\t\treturn Promise.reject();\n\t\t} );\n\t};\n\n\treturn next( { ...options, parse: false } )\n\t\t.catch( ( response ) => {\n\t\t\tconst attachmentId = response.headers.get(\n\t\t\t\t'x-wp-upload-attachment-id'\n\t\t\t);\n\t\t\tif (\n\t\t\t\tresponse.status >= 500 &&\n\t\t\t\tresponse.status < 600 &&\n\t\t\t\tattachmentId\n\t\t\t) {\n\t\t\t\treturn postProcess( attachmentId ).catch( () => {\n\t\t\t\t\tif ( options.parse !== false ) {\n\t\t\t\t\t\treturn Promise.reject( {\n\t\t\t\t\t\t\tcode: 'post_process',\n\t\t\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\t\t'Media upload failed. If this is a photo or a large image, please scale it down and try again.'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.reject( response );\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn parseAndThrowError( response, options.parse );\n\t\t} )\n\t\t.then( ( response ) =>\n\t\t\tparseResponseAndNormalizeError( response, options.parse )\n\t\t);\n};\n\nexport default mediaUploadMiddleware;\n", "/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArg, removeQueryArgs } from '@wordpress/url';\n\n/**\n * This appends a `wp_theme_preview` parameter to the REST API request URL if\n * the admin URL contains a `theme` GET parameter.\n *\n * If the REST API request URL has contained the `wp_theme_preview` parameter as `''`,\n * then bypass this middleware.\n *\n * @param {Record<string, any>} themePath\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\nconst createThemePreviewMiddleware = ( themePath ) => ( options, next ) => {\n\tif ( typeof options.url === 'string' ) {\n\t\tconst wpThemePreview = getQueryArg( options.url, 'wp_theme_preview' );\n\t\tif ( wpThemePreview === undefined ) {\n\t\t\toptions.url = addQueryArgs( options.url, {\n\t\t\t\twp_theme_preview: themePath,\n\t\t\t} );\n\t\t} else if ( wpThemePreview === '' ) {\n\t\t\toptions.url = removeQueryArgs( options.url, 'wp_theme_preview' );\n\t\t}\n\t}\n\n\tif ( typeof options.path === 'string' ) {\n\t\tconst wpThemePreview = getQueryArg( options.path, 'wp_theme_preview' );\n\t\tif ( wpThemePreview === undefined ) {\n\t\t\toptions.path = addQueryArgs( options.path, {\n\t\t\t\twp_theme_preview: themePath,\n\t\t\t} );\n\t\t} else if ( wpThemePreview === '' ) {\n\t\t\toptions.path = removeQueryArgs( options.path, 'wp_theme_preview' );\n\t\t}\n\t}\n\n\treturn next( options );\n};\n\nexport default createThemePreviewMiddleware;\n", "/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport createNonceMiddleware from './middlewares/nonce';\nimport createRootURLMiddleware from './middlewares/root-url';\nimport createPreloadingMiddleware from './middlewares/preloading';\nimport fetchAllMiddleware from './middlewares/fetch-all-middleware';\nimport namespaceEndpointMiddleware from './middlewares/namespace-endpoint';\nimport httpV1Middleware from './middlewares/http-v1';\nimport userLocaleMiddleware from './middlewares/user-locale';\nimport mediaUploadMiddleware from './middlewares/media-upload';\nimport createThemePreviewMiddleware from './middlewares/theme-preview';\nimport {\n\tparseResponseAndNormalizeError,\n\tparseAndThrowError,\n} from './utils/response';\n\n/**\n * Default set of header values which should be sent with every request unless\n * explicitly provided through apiFetch options.\n *\n * @type {Record<string, string>}\n */\nconst DEFAULT_HEADERS = {\n\t// The backend uses the Accept header as a condition for considering an\n\t// incoming request as a REST request.\n\t//\n\t// See: https://core.trac.wordpress.org/ticket/44534\n\tAccept: 'application/json, */*;q=0.1',\n};\n\n/**\n * Default set of fetch option values which should be sent with every request\n * unless explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_OPTIONS = {\n\tcredentials: 'include',\n};\n\n/** @typedef {import('./types').APIFetchMiddleware} APIFetchMiddleware */\n/** @typedef {import('./types').APIFetchOptions} APIFetchOptions */\n\n/**\n * @type {import('./types').APIFetchMiddleware[]}\n */\nconst middlewares = [\n\tuserLocaleMiddleware,\n\tnamespaceEndpointMiddleware,\n\thttpV1Middleware,\n\tfetchAllMiddleware,\n];\n\n/**\n * Register a middleware\n *\n * @param {import('./types').APIFetchMiddleware} middleware\n */\nfunction registerMiddleware( middleware ) {\n\tmiddlewares.unshift( middleware );\n}\n\n/**\n * Checks the status of a response, throwing the Response as an error if\n * it is outside the 200 range.\n *\n * @param {Response} response\n * @return {Response} The response if the status is in the 200 range.\n */\nconst checkStatus = ( response ) => {\n\tif ( response.status >= 200 && response.status < 300 ) {\n\t\treturn response;\n\t}\n\n\tthrow response;\n};\n\n/** @typedef {(options: import('./types').APIFetchOptions) => Promise<any>} FetchHandler*/\n\n/**\n * @type {FetchHandler}\n */\nconst defaultFetchHandler = ( nextOptions ) => {\n\tconst { url, path, data, parse = true, ...remainingOptions } = nextOptions;\n\tlet { body, headers } = nextOptions;\n\n\t// Merge explicitly-provided headers with default values.\n\theaders = { ...DEFAULT_HEADERS, ...headers };\n\n\t// The `data` property is a shorthand for sending a JSON body.\n\tif ( data ) {\n\t\tbody = JSON.stringify( data );\n\t\theaders[ 'Content-Type' ] = 'application/json';\n\t}\n\n\tconst responsePromise = window.fetch(\n\t\t// Fall back to explicitly passing `window.location` which is the behavior if `undefined` is passed.\n\t\turl || path || window.location.href,\n\t\t{\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...remainingOptions,\n\t\t\tbody,\n\t\t\theaders,\n\t\t}\n\t);\n\n\treturn responsePromise.then(\n\t\t( value ) =>\n\t\t\tPromise.resolve( value )\n\t\t\t\t.then( checkStatus )\n\t\t\t\t.catch( ( response ) => parseAndThrowError( response, parse ) )\n\t\t\t\t.then( ( response ) =>\n\t\t\t\t\tparseResponseAndNormalizeError( response, parse )\n\t\t\t\t),\n\t\t( err ) => {\n\t\t\t// Re-throw AbortError for the users to handle it themselves.\n\t\t\tif ( err && err.name === 'AbortError' ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\t// Otherwise, there is most likely no network connection.\n\t\t\t// Unfortunately the message might depend on the browser.\n\t\t\tthrow {\n\t\t\t\tcode: 'fetch_error',\n\t\t\t\tmessage: __( 'You are probably offline.' ),\n\t\t\t};\n\t\t}\n\t);\n};\n\n/** @type {FetchHandler} */\nlet fetchHandler = defaultFetchHandler;\n\n/**\n * Defines a custom fetch handler for making the requests that will override\n * the default one using window.fetch\n *\n * @param {FetchHandler} newFetchHandler The new fetch handler\n */\nfunction setFetchHandler( newFetchHandler ) {\n\tfetchHandler = newFetchHandler;\n}\n\n/**\n * @template T\n * @param {import('./types').APIFetchOptions} options\n * @return {Promise<T>} A promise representing the request processed via the registered middlewares.\n */\nfunction apiFetch( options ) {\n\t// creates a nested function chain that calls all middlewares and finally the `fetchHandler`,\n\t// converting `middlewares = [ m1, m2, m3 ]` into:\n\t// ```\n\t// opts1 => m1( opts1, opts2 => m2( opts2, opts3 => m3( opts3, fetchHandler ) ) );\n\t// ```\n\tconst enhancedHandler = middlewares.reduceRight(\n\t\t( /** @type {FetchHandler} */ next, middleware ) => {\n\t\t\treturn ( workingOptions ) => middleware( workingOptions, next );\n\t\t},\n\t\tfetchHandler\n\t);\n\n\treturn enhancedHandler( options ).catch( ( error ) => {\n\t\tif ( error.code !== 'rest_cookie_invalid_nonce' ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\n\t\t// If the nonce is invalid, refresh it and try again.\n\t\treturn (\n\t\t\twindow\n\t\t\t\t// @ts-ignore\n\t\t\t\t.fetch( apiFetch.nonceEndpoint )\n\t\t\t\t.then( checkStatus )\n\t\t\t\t.then( ( data ) => data.text() )\n\t\t\t\t.then( ( text ) => {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tapiFetch.nonceMiddleware.nonce = text;\n\t\t\t\t\treturn apiFetch( options );\n\t\t\t\t} )\n\t\t);\n\t} );\n}\n\napiFetch.use = registerMiddleware;\napiFetch.setFetchHandler = setFetchHandler;\n\napiFetch.createNonceMiddleware = createNonceMiddleware;\napiFetch.createPreloadingMiddleware = createPreloadingMiddleware;\napiFetch.createRootURLMiddleware = createRootURLMiddleware;\napiFetch.fetchAllMiddleware = fetchAllMiddleware;\napiFetch.mediaUploadMiddleware = mediaUploadMiddleware;\napiFetch.createThemePreviewMiddleware = createThemePreviewMiddleware;\n\nexport default apiFetch;\n"],
  "mappings": "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",
  "names": ["sprintf", "removeAccents", "logErrorOnce", "memoize", "console", "error", "postfix", "evaluate", "DEFAULT_LOCALE_DATA", "plural_forms", "n", "I18N_HOOK_REGEXP", "createI18n", "initialData", "initialDomain", "hooks", "tannin", "Tannin", "listeners", "Set", "notifyListeners", "forEach", "listener", "subscribe", "callback", "add", "delete", "getLocaleData", "domain", "data", "doSetLocaleData", "pluralForms", "setLocaleData", "addLocaleData", "resetLocaleData", "dcnpgettext", "context", "single", "plural", "number", "undefined", "getFilterDomain", "__", "text", "translation", "applyFilters", "_x", "_n", "_nx", "isRTL", "hasTranslation", "key", "result", "onHookAddedOrRemoved", "hookName", "test", "addAction", "validateNamespace", "namespace", "console", "error", "test", "validateHookName", "hookName", "console", "error", "test", "createAddHook", "hooks", "storeKey", "addHook", "hookName", "namespace", "callback", "priority", "hooksStore", "validateHookName", "validateNamespace", "console", "error", "handler", "handlers", "i", "length", "splice", "__current", "forEach", "hookInfo", "name", "currentIndex", "runs", "doAction", "createRemoveHook", "hooks", "storeKey", "removeAll", "removeHook", "hookName", "namespace", "hooksStore", "validateHookName", "validateNamespace", "handlersRemoved", "handlers", "length", "runs", "i", "splice", "__current", "forEach", "hookInfo", "name", "currentIndex", "doAction", "createHasHook", "hooks", "storeKey", "hasHook", "hookName", "namespace", "hooksStore", "handlers", "some", "hook", "createRunHook", "hooks", "storeKey", "returnFirstArg", "runHooks", "hookName", "args", "hooksStore", "handlers", "runs", "all", "push", "length", "undefined", "hookInfo", "name", "currentIndex", "__current", "handler", "result", "callback", "apply", "pop", "createCurrentHook", "hooks", "storeKey", "currentHook", "_hooksStore$__current", "hooksStore", "__current", "length", "name", "createDoingHook", "hooks", "storeKey", "doingHook", "hookName", "hooksStore", "__current", "name", "createDidHook", "hooks", "storeKey", "didHook", "hookName", "hooksStore", "validateHookName", "runs", "_Hooks", "constructor", "actions", "Object", "create", "__current", "filters", "addAction", "createAddHook", "addFilter", "removeAction", "createRemoveHook", "removeFilter", "hasAction", "createHasHook", "hasFilter", "removeAllActions", "removeAllFilters", "doAction", "createRunHook", "applyFilters", "currentAction", "createCurrentHook", "currentFilter", "doingAction", "createDoingHook", "doingFilter", "didAction", "createDidHook", "didFilter", "createHooks", "defaultHooks", "createHooks", "addAction", "addFilter", "removeAction", "removeFilter", "hasAction", "hasFilter", "removeAllActions", "removeAllFilters", "doAction", "applyFilters", "currentAction", "currentFilter", "doingAction", "doingFilter", "didAction", "didFilter", "actions", "filters", "i18n", "createI18n", "undefined", "defaultHooks", "getLocaleData", "i18n", "bind", "setLocaleData", "resetLocaleData", "subscribe", "__", "_x", "_n", "_nx", "isRTL", "hasTranslation", "createNonceMiddleware", "nonce", "middleware", "options", "next", "headers", "headerName", "toLowerCase", "namespaceAndEndpointMiddleware", "options", "next", "path", "namespaceTrimmed", "endpointTrimmed", "namespace", "endpoint", "replace", "createRootURLMiddleware", "rootURL", "options", "next", "namespaceAndEndpointMiddleware", "optionsWithPath", "url", "path", "apiRoot", "indexOf", "replace", "getQueryString", "url", "query", "URL", "search", "substring", "error", "buildQueryString", "data", "string", "stack", "Object", "entries", "pair", "shift", "key", "value", "hasNestedData", "Array", "isArray", "constructor", "valuePairs", "reverse", "member", "memberValue", "unshift", "undefined", "map", "encodeURIComponent", "join", "substr", "safeDecodeURIComponent", "uriComponent", "decodeURIComponent", "uriComponentError", "setPath", "object", "path", "value", "length", "lastIndex", "i", "key", "Array", "isArray", "toString", "includes", "toUpperCase", "isNextKeyArrayIndex", "isNaN", "Number", "getQueryArgs", "url", "getQueryString", "replace", "split", "reduce", "accumulator", "keyValue", "filter", "Boolean", "map", "safeDecodeURIComponent", "segments", "Object", "create", "addQueryArgs", "url", "args", "Object", "keys", "length", "baseUrl", "queryStringIndex", "indexOf", "assign", "getQueryArgs", "substr", "buildQueryString", "getQueryArg", "url", "arg", "getQueryArgs", "hasQueryArg", "url", "arg", "getQueryArg", "undefined", "removeQueryArgs", "url", "args", "queryStringIndex", "indexOf", "query", "getQueryArgs", "baseURL", "substr", "forEach", "arg", "queryString", "buildQueryString", "normalizePath", "path", "splitted", "split", "query", "base", "map", "entry", "pair", "decodeURIComponent", "sort", "a", "b", "localeCompare", "encodeURIComponent", "join", "createPreloadingMiddleware", "preloadedData", "cache", "Object", "fromEntries", "entries", "map", "path", "data", "normalizePath", "options", "next", "parse", "rawPath", "url", "rest_route", "pathFromQuery", "queryArgs", "getQueryArgs", "addQueryArgs", "method", "cacheData", "prepareResponse", "responseData", "Promise", "resolve", "body", "window", "Response", "JSON", "stringify", "status", "statusText", "headers", "modifyQuery", "path", "url", "options", "queryArgs", "addQueryArgs", "parseResponse", "response", "json", "Promise", "reject", "parseLinkHeader", "linkHeader", "match", "next", "getNextPageUrl", "headers", "get", "requestContainsUnboundedQuery", "pathIsUnbounded", "indexOf", "urlIsUnbounded", "fetchAllMiddleware", "parse", "apiFetch", "per_page", "results", "Array", "isArray", "nextPage", "mergedResults", "concat", "nextResponse", "undefined", "nextResults", "OVERRIDE_METHODS", "Set", "DEFAULT_METHOD", "httpV1Middleware", "options", "next", "method", "has", "toUpperCase", "headers", "userLocaleMiddleware", "options", "next", "url", "hasQueryArg", "addQueryArgs", "_locale", "path", "parseResponse", "response", "shouldParseResponse", "status", "json", "Promise", "reject", "parseJsonAndNormalizeError", "invalidJsonError", "code", "message", "__", "catch", "parseResponseAndNormalizeError", "resolve", "res", "parseAndThrowError", "then", "error", "unknownError", "isMediaUploadRequest", "options", "isCreateMethod", "method", "isMediaEndpoint", "path", "indexOf", "url", "mediaUploadMiddleware", "next", "retries", "maxRetries", "postProcess", "attachmentId", "data", "action", "parse", "catch", "Promise", "reject", "response", "headers", "get", "status", "code", "message", "__", "parseAndThrowError", "then", "parseResponseAndNormalizeError", "createThemePreviewMiddleware", "themePath", "options", "next", "url", "wpThemePreview", "getQueryArg", "undefined", "addQueryArgs", "wp_theme_preview", "removeQueryArgs", "path", "DEFAULT_HEADERS", "Accept", "DEFAULT_OPTIONS", "credentials", "middlewares", "userLocaleMiddleware", "namespaceEndpointMiddleware", "httpV1Middleware", "fetchAllMiddleware", "registerMiddleware", "middleware", "unshift", "checkStatus", "response", "status", "defaultFetchHandler", "nextOptions", "url", "path", "data", "parse", "remainingOptions", "body", "headers", "JSON", "stringify", "responsePromise", "window", "fetch", "location", "href", "then", "value", "Promise", "resolve", "catch", "parseAndThrowError", "parseResponseAndNormalizeError", "err", "name", "code", "message", "__", "fetchHandler", "setFetchHandler", "newFetchHandler", "apiFetch", "options", "enhancedHandler", "reduceRight", "next", "workingOptions", "error", "reject", "nonceEndpoint", "text", "nonceMiddleware", "nonce", "use", "createNonceMiddleware", "createPreloadingMiddleware", "createRootURLMiddleware", "mediaUploadMiddleware", "createThemePreviewMiddleware"]
}
